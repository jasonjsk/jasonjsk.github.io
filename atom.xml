<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>金兄</title>
  <subtitle>向着目标前行</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jinsk.vip/"/>
  <updated>2017-04-28T01:29:53.000Z</updated>
  <id>http://www.jinsk.vip/</id>
  
  <author>
    <name>金尚坤</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>服务器监控工具-netdata-搭建</title>
    <link href="http://www.jinsk.vip/2017/04/27/netdata/"/>
    <id>http://www.jinsk.vip/2017/04/27/netdata/</id>
    <published>2017-04-27T06:53:07.000Z</published>
    <updated>2017-04-28T01:29:53.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="netdata简介"><a href="#netdata简介" class="headerlink" title="netdata简介"></a>netdata简介</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;这是个开源项目，地址为(<a href="https://github.com/firehol/netdata/wiki)。" target="_blank" rel="external">https://github.com/firehol/netdata/wiki)。</a><br>&nbsp;&nbsp;&nbsp;&nbsp;我已经使用这套监控系统一段时间了，感觉很不错，监控指标丰富，界面美观，能监控集群下的所有节点服务器，它是个什么东东呢？</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;”netdata is a scalable, distributed, real-time, performance and health monitoring solution for Linux, FreeBSD and MacOS. It is open-source too.”</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;netdata是一个可扩展的，分布式的，实时的，为Linux, FreeBSD和MacOS性能及健康状态监控的解决方案，当然它也是开源的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;它可以监控服务器的健康运行参数及状态，包括CPU,内存，网络，磁盘等常用的监控指标，以及自己配置扩展监控项，如，redis, tomcat, mysql, nginx, elasticsearch等，是不是已经觉得很不错了？那接下来我说说我是怎么安装的，怎么配置的吧。</p>
<h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><ul>
<li><p>下载</p>
<blockquote>
<p>由于开源项目，直接克隆一套源代码到YOUR_SERVER/path/to/</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/firehol/netdata.git</div></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>安装</p>
<blockquote>
<p>1.安装编译所需要的包</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install zlib-devel libuuid-devel libmnl-devel gcc make git autoconf autogen automake pkgconfig</div></pre></td></tr></table></figure>
<p>2.运行自带的安装启动脚本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./netdata-installer.sh</div></pre></td></tr></table></figure>
<p>完事你会看到如下提示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">It will be installed at these locations:</div><div class="line">  - the daemon     at /usr/sbin/netdata</div><div class="line">  - config files   in /etc/netdata</div><div class="line">  - web files      in /usr/share/netdata</div><div class="line">  - plugins        in /usr/libexec/netdata</div><div class="line">  - cache files    in /var/cache/netdata</div><div class="line">  - db files       in /var/lib/netdata</div><div class="line">  - log files      in /var/log/netdata</div><div class="line">  - pid file       at /var/run/netdata.pid</div><div class="line">  - logrotate file at /etc/logrotate.d/netdata</div><div class="line"> This installer allows you to change the installation path.</div><div class="line"> Press Control-C and run the same command with --help for help.</div><div class="line"> Press ENTER to build and install netdata to your system &gt;</div></pre></td></tr></table></figure>
<p>这些是告诉你，所涉及的文件都安装在哪个目录下，到时配置或修改的时候直接去这些地方找就好了，当然自己也可以仔细看看这些配置文件，了解各个参数的含义。<br>那么这个时候其实就可以通过提示的URL <a href="http://this.machine.ip:19999/" target="_blank" rel="external">http://this.machine.ip:19999/</a> 开始监控当前服务器了, 没错，正如访问地址，默认WEB使用的端口为19999.<br>看看netdata监控界面长啥样儿吧~</p>
<a id="more"></a>
<p><img src="/images/netdata-monitor.png" alt=""></p>
<p>3.修改默认端口和限制仅内网访问<br>为了安全，特别是在生产服务器上，尽量修改掉默认端口，而且我也不想把我的所有服务器的公网IP都公开暴露，所以我会找一个跳板机来监控它们，而且我还限制了netdata的数据只有通过跳板机提供的接口能才访问监控WEB页面，保护集群服务器各个节点，具体修改其实很简单，修改配置文件即可，/etc/netdata/netdata.conf。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[web]</div><div class="line">        <span class="comment"># web files owner = netdata</span></div><div class="line">        <span class="comment"># web files group = netdata</span></div><div class="line">        <span class="comment"># listen backlog = 100</span></div><div class="line">        <span class="comment"># default port = 19999</span></div><div class="line">        <span class="comment"># bind to = *</span></div><div class="line">        <span class="comment"># mode = multi-threaded</span></div><div class="line">        <span class="comment"># disconnect idle clients after seconds = 60</span></div><div class="line">        <span class="comment"># respect do not track policy = no</span></div><div class="line">        <span class="comment"># x-frame-options response header = </span></div><div class="line">        <span class="comment"># enable gzip compression = yes</span></div><div class="line">        <span class="comment"># gzip compression strategy = default</span></div><div class="line">        <span class="comment"># gzip compression level = 3</span></div><div class="line">        default port = 123232</div><div class="line">        <span class="built_in">bind</span> to = 10.xx.yy.zz:123232</div></pre></td></tr></table></figure>
<p>可以看到最后两项是我自己修改的内容，内网的IP，通过ifconfig可以方便地看到，eth0 对应的inet addr就是。<br>修改好了，需要重启一下netdata服务，方法有几种，安装成功注册到service的，可以通过service netdata restart来重启，也可以直接killall netdata, 然后 netdata启动。</p>
<p><strong>这四个步骤重复在所有的服务器上搞一遍，那么基本安装配置就好了，接下来配置Nginx</strong></p>
</blockquote>
</li>
<li><p>访问接口配置</p>
<blockquote>
<p>我使用nginx来配置对外提供的监控访问接口，我选择一台测试服务器，安全要求较低的服务器作为了跳板监控机。Nginx安装此处不细说，介绍一下我配置的内容：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  www.jinsk.vip;</div><div class="line"></div><div class="line">    location /m/1/ &#123;</div><div class="line">        proxy_pass http://10.xx.yy.z1:port/;</div><div class="line">        proxy_set_header        Host <span class="variable">$host</span>;</div><div class="line">        proxy_set_header        X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">        proxy_set_header        X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location /m/2/ &#123;</div><div class="line">        proxy_pass http://10.xx.yy.z2:port/;</div><div class="line">        proxy_set_header        Host <span class="variable">$host</span>;</div><div class="line">        proxy_set_header        X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">        proxy_set_header        X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location /m/3/ &#123;</div><div class="line">        proxy_pass http://10.xx.yy.z3:port/;</div><div class="line">        proxy_set_header        Host <span class="variable">$host</span>;</div><div class="line">        proxy_set_header        X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">        proxy_set_header        X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location /m/4/ &#123;</div><div class="line">        proxy_pass http://10.xx.yy.z4:port/;</div><div class="line">        proxy_set_header        Host <span class="variable">$host</span>;</div><div class="line">        proxy_set_header        X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">        proxy_set_header        X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">    &#125;</div><div class="line">    ....</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>基本监控功能模块安装和配置就已经好了，就可以让开发运维的小伙伴们定期的去遛一遍服务器，当然netdata身也是带有提醒功能的，只要你开启着监控页面，就会在设定的预警参数触发和恢复时在浏览器右上角提醒您。</p>
</li>
</ul>
<h3 id="配置redis监控"><a href="#配置redis监控" class="headerlink" title="配置redis监控"></a>配置redis监控</h3><p>按照官方提供的方法，分为Python版和shell版，官方推荐使用python版，所以我按照python版本的方法进行配置的。</p>
<ul>
<li>1.启用redis监控功能，默认是没有启用的<blockquote>
<p>修改/etc/netdata/python.d.conf配置文件中的redis启动项，即去掉注释 #redis: yes<br>redis: yes</p>
</blockquote>
</li>
<li>2.配置redis的地址，端口，用户名，密码<blockquote>
<p>修改/etc/netdata/python.d/redis.conf配置文件<br>支持socket, ipv4, ipv6方式,参考已有配置格式进个添加修改即可，先定义个标签，如”basedata_ipv4:”,然后包含四个参数可配置，name,host,port,pass，name就是在监控面板中看到的名称，便于区分多个redis节点，host,port,pass一看就明白分别对应的是什么了，不多说了。</p>
</blockquote>
</li>
</ul>
<h3 id="配置mysql监控"><a href="#配置mysql监控" class="headerlink" title="配置mysql监控"></a>配置mysql监控</h3><p>有了上面的redis插件配置方法，配置mysql就是依葫芦画瓢了，先去掉#mysql:yes的注释，然后配置mysql.conf中的连接参数。</p>
<h3 id="配置tomcat监控"><a href="#配置tomcat监控" class="headerlink" title="配置tomcat监控"></a>配置tomcat监控</h3><p>目前我是还没有配置，因为，我生产应用的tomcat改造过，并且移除了status模块，所以暂时还没有配置集中监控功能。</p>
<h3 id="配置nginx监控"><a href="#配置nginx监控" class="headerlink" title="配置nginx监控"></a>配置nginx监控</h3><p>目前我也还没有配置，网上资料挺多的，安装相应模块，并配置相应的参数即可应用了。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>优点<blockquote>
<p>1.极大的方便了监控服务器的操作，可以让团队的小伙伴们一起来做这事，而且还可以在家里做，随时随地做，再也不需要指定小伙伴登录CRT去逐个服务器检查了。<br>2.由于本身提供的监控指标够多，也有相对较合理的预警值提醒，因此，只要打开着监控页面，看到有报警去对应处理就可以了，提高了工作效率。</p>
</blockquote>
</li>
<li>建议<blockquote>
<p>1.配置需要仔细小心，当时绑定内网IP的时候，我就不小心小手一抖把bind to 写成了 bing to, 因此而测试了好久没找到原因，一度还怀疑netdata功能有问题，于是乎，我还去github提了<a href="https://github.com/firehol/netdata/issues/2067" target="_blank" rel="external">issue</a>。<br>2.观察日志，有没有出现异常。<br>3.去github上搜索解决方案，你遇到的问题别人早就遇到过了，而且已经解决了。</p>
</blockquote>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;netdata简介&quot;&gt;&lt;a href=&quot;#netdata简介&quot; class=&quot;headerlink&quot; title=&quot;netdata简介&quot;&gt;&lt;/a&gt;netdata简介&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这是个开源项目，地址为(&lt;a href=&quot;https://github.com/firehol/netdata/wiki)。&quot;&gt;https://github.com/firehol/netdata/wiki)。&lt;/a&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;我已经使用这套监控系统一段时间了，感觉很不错，监控指标丰富，界面美观，能监控集群下的所有节点服务器，它是个什么东东呢？&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;”netdata is a scalable, distributed, real-time, performance and health monitoring solution for Linux, FreeBSD and MacOS. It is open-source too.”&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;netdata是一个可扩展的，分布式的，实时的，为Linux, FreeBSD和MacOS性能及健康状态监控的解决方案，当然它也是开源的。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;它可以监控服务器的健康运行参数及状态，包括CPU,内存，网络，磁盘等常用的监控指标，以及自己配置扩展监控项，如，redis, tomcat, mysql, nginx, elasticsearch等，是不是已经觉得很不错了？那接下来我说说我是怎么安装的，怎么配置的吧。&lt;/p&gt;
&lt;h3 id=&quot;安装配置&quot;&gt;&lt;a href=&quot;#安装配置&quot; class=&quot;headerlink&quot; title=&quot;安装配置&quot;&gt;&lt;/a&gt;安装配置&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于开源项目，直接克隆一套源代码到YOUR_SERVER/path/to/&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/firehol/netdata.git&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.安装编译所需要的包&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum -y install zlib-devel libuuid-devel libmnl-devel gcc make git autoconf autogen automake pkgconfig&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.运行自带的安装启动脚本&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;./netdata-installer.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;完事你会看到如下提示：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;It will be installed at these locations:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  - the daemon     at /usr/sbin/netdata&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  - config files   in /etc/netdata&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  - web files      in /usr/share/netdata&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  - plugins        in /usr/libexec/netdata&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  - cache files    in /var/cache/netdata&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  - db files       in /var/lib/netdata&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  - log files      in /var/log/netdata&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  - pid file       at /var/run/netdata.pid&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  - logrotate file at /etc/logrotate.d/netdata&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; This installer allows you to change the installation path.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; Press Control-C and run the same command with --help for help.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; Press ENTER to build and install netdata to your system &amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这些是告诉你，所涉及的文件都安装在哪个目录下，到时配置或修改的时候直接去这些地方找就好了，当然自己也可以仔细看看这些配置文件，了解各个参数的含义。&lt;br&gt;那么这个时候其实就可以通过提示的URL &lt;a href=&quot;http://this.machine.ip:19999/&quot;&gt;http://this.machine.ip:19999/&lt;/a&gt; 开始监控当前服务器了, 没错，正如访问地址，默认WEB使用的端口为19999.&lt;br&gt;看看netdata监控界面长啥样儿吧~&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.jinsk.vip/Categories/technology/"/>
    
    
      <category term="环境搭建" scheme="http://www.jinsk.vip/Tags/setup/"/>
    
      <category term="运维" scheme="http://www.jinsk.vip/Tags/devops/"/>
    
  </entry>
  
  <entry>
    <title>我的博客小窝上线了</title>
    <link href="http://www.jinsk.vip/2017/04/21/first/"/>
    <id>http://www.jinsk.vip/2017/04/21/first/</id>
    <published>2017-04-21T01:26:24.000Z</published>
    <updated>2017-04-27T09:51:32.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="本窝目的"><a href="#本窝目的" class="headerlink" title="本窝目的"></a>本窝目的</h3><p>作为一名程序猿，应该要有自己的小窝来总结、积累、沉淀自己的东西，充实自己，因此，趁在农忙过后的这段时间搭好环境，转移曾经的笔记到这个小窝来。<br>随便回顾一下本博所搭建运用的技术，因此也是我需要学习的新知识，如：markdown语法， hexo框架，github管理及git工具。</p>
<h3 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h3><ul>
<li>Github<blockquote>
<p><a href="https://github.com/" target="_blank" rel="external">注册帐号</a><br>创建项目</p>
</blockquote>
</li>
<li>本地搭建hexo环境<blockquote>
<p>安装Node.js<br>安装hexo<br>创建博客项目<br>配置github帐号<br>安装插件<br><a href="https://hexo.io/themes/" target="_blank" rel="external">选择主题</a><br>下载并配置主题（本人选择了<a href="https://github.com/ppoffice/hexo-theme-icarus" target="_blank" rel="external">icarus</a>）</p>
</blockquote>
</li>
<li>安装Markdown环境<blockquote>
<p>安装SublimeText3<br>安装Markdown插件</p>
</blockquote>
</li>
</ul>
<h3 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h3><h6 id="上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。"><a href="#上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。" class="headerlink" title="上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。"></a>上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。</h6><a id="more"></a>
<ul>
<li><p>主题汉化</p>
<blockquote>
<p>1.下载就略过了，git clone 对应的主题到本地themes目录下<br>2.我一开始还对主题的各个页面进行了汉化修改，但实际上并不需要，只要把主配置文件_config.yml中语言项配置为zh-CN即可，即(language: zh-CN)</p>
</blockquote>
</li>
<li><p>自定义域名配置</p>
<blockquote>
<p>如果你也和我一样，专门申请了一个专用的域名，那么会在github中配置costom domain,但是每次重新发布之后，又需要重新设置<br><strong>解决办法</strong>：在项目source目录中创建CNAME文件，在里面写上自己的域名即可，再重新发即不需要重新设置了</p>
</blockquote>
</li>
<li><p>评论支持功能配置</p>
<blockquote>
<p>1.社会化评论系统选择，我首先参考了网上很多朋友使用的友言，我开始配置了，发现发布github上之后，提交评论时提示参数不正确，无法提交评论内容，于是，转而尝试多说，但是遗憾多说将在6.1日关停评论服务，所以，后来我选择了”<a href="http://changyan.kuaizhan.com/" target="_blank" rel="external">搜狐畅言</a>“<br>2.对于畅言来说，配置还是挺简单的，注册好帐号就能找到appid和conf两个东西，配置上就OK了<br>3.配置主题中_config.yml-&gt;comment: changyan: 两项，并不需要网上所说修改artcle.ejs了，因为，新版的主题直接在最下边处理好了,在index.ejs中针对支持的评论系统做好了处理</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;%- partial(&apos;comment/index&apos;) %&gt;</div></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>分类和标签通过菜单进入无内容显示</p>
<blockquote>
<p><strong>解决办法</strong>：把主题下面边的categories里的index.md复制到项目的source里categories目录里的index.md进行替换，其实也就是参考主题里的写法就好了；标签的也一样。</p>
</blockquote>
</li>
</ul>
<h3 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h3><p>希望大家多多指教，多多交流，左边二维码是我的微信，欢迎加我好友进行交流，相互学习。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;本窝目的&quot;&gt;&lt;a href=&quot;#本窝目的&quot; class=&quot;headerlink&quot; title=&quot;本窝目的&quot;&gt;&lt;/a&gt;本窝目的&lt;/h3&gt;&lt;p&gt;作为一名程序猿，应该要有自己的小窝来总结、积累、沉淀自己的东西，充实自己，因此，趁在农忙过后的这段时间搭好环境，转移曾经的笔记到这个小窝来。&lt;br&gt;随便回顾一下本博所搭建运用的技术，因此也是我需要学习的新知识，如：markdown语法， hexo框架，github管理及git工具。&lt;/p&gt;
&lt;h3 id=&quot;博客搭建&quot;&gt;&lt;a href=&quot;#博客搭建&quot; class=&quot;headerlink&quot; title=&quot;博客搭建&quot;&gt;&lt;/a&gt;博客搭建&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Github&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;注册帐号&lt;/a&gt;&lt;br&gt;创建项目&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;本地搭建hexo环境&lt;blockquote&gt;
&lt;p&gt;安装Node.js&lt;br&gt;安装hexo&lt;br&gt;创建博客项目&lt;br&gt;配置github帐号&lt;br&gt;安装插件&lt;br&gt;&lt;a href=&quot;https://hexo.io/themes/&quot;&gt;选择主题&lt;/a&gt;&lt;br&gt;下载并配置主题（本人选择了&lt;a href=&quot;https://github.com/ppoffice/hexo-theme-icarus&quot;&gt;icarus&lt;/a&gt;）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;安装Markdown环境&lt;blockquote&gt;
&lt;p&gt;安装SublimeText3&lt;br&gt;安装Markdown插件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;问题总结&quot;&gt;&lt;a href=&quot;#问题总结&quot; class=&quot;headerlink&quot; title=&quot;问题总结&quot;&gt;&lt;/a&gt;问题总结&lt;/h3&gt;&lt;h6 id=&quot;上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。&quot;&gt;&lt;a href=&quot;#上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。&quot; class=&quot;headerlink&quot; title=&quot;上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。&quot;&gt;&lt;/a&gt;上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。&lt;/h6&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.jinsk.vip/Categories/technology/"/>
    
    
      <category term="环境搭建" scheme="http://www.jinsk.vip/Tags/setup/"/>
    
      <category term="随笔日志" scheme="http://www.jinsk.vip/Tags/diary/"/>
    
  </entry>
  
</feed>
