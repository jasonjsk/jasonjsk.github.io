<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[elk安装过程]]></title>
      <url>/2017/05/24/elksetup/</url>
      <content type="html"><![CDATA[<h5 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h5><p>使用ELK集中管理日志，如集群应用中所有节点的日志放在一起查看，并按日志级别分别过滤，实时监控错误日志，以及对业务一些数据进行分析，如实时车辆位置展示等等。</p>
<h5 id="版本选择"><a href="#版本选择" class="headerlink" title="版本选择"></a>版本选择</h5><p>作为尝鲜者，选择官网最新版本来尝试</p>
<blockquote>
<ul>
<li>ElasticSearch5.4.0</li>
<li>Filebeat5.4.0</li>
<li>Logstash5.4.0</li>
<li>Kibana5.4.0 </li>
<li>Redis3.2.9</li>
<li>x-pack</li>
<li>nginx1.12.0</li>
<li>Centos7.3 x64</li>
</ul>
</blockquote>
<p><img src="images/ELK-Architure.png" alt=""></p>
<h5 id="ElasticSearch安装过程"><a href="#ElasticSearch安装过程" class="headerlink" title="ElasticSearch安装过程"></a>ElasticSearch安装过程</h5><ul>
<li>按照官网的操作步骤安装十分简单，第一步，下载并解压，第二步，运行bin/elasticsearch 就完事了</li>
<li>官网地址：(<a href="https://www.elastic.co/downloads/elasticsearch" target="_blank" rel="external">https://www.elastic.co/downloads/elasticsearch</a>)</li>
<li>实际在运行的时候可以使用守护方式运行，bin/elasticsearch -d</li>
<li>安装过程中遇到的几个错误和解决办法</li>
</ul>
<blockquote>
<p>第一个错误：不能使用root用户启动（<font color="BLUE"><b>can not run elasticsearch as root</b></font>）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[root@appsvr02 bin]<span class="comment"># ./elasticsearch</span></div><div class="line">[2017-05-24T09:19:11,866][WARN ][o.e.b.ElasticsearchUncaughtExceptionHandler] [] uncaught exception <span class="keyword">in</span> thread [main]</div><div class="line">org.elasticsearch.bootstrap.StartupException: java.lang.RuntimeException: can not run elasticsearch as root</div><div class="line">        at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:127) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:114) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:67) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:122) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.cli.Command.main(Command.java:88) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:91) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:84) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">Caused by: java.lang.RuntimeException: can not run elasticsearch as root</div><div class="line">        at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:106) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:204) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:360) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:123) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        ... 6 more</div></pre></td></tr></table></figure></p>
<p>因此，添加elk帐户： useradd elk， 并把原来目录所有都改为 elk, chown -R 命令。</p>
<hr>
<p>第二个错误：内核版本不满足要求(<font color="BLUE"><b>seccomp unavailable: requires kernel 3.5+ with CONFIG_SECCOMP and CONFIG_SECCOMP_FILTER compiled</b></font>)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">[elk@lnbAppsvr02 bin]$ ./elasticsearch</div><div class="line">[2017-05-24T09:20:41,418][WARN ][o.e.b.JNANatives         ] unable to install syscall filter: </div><div class="line">java.lang.UnsupportedOperationException: seccomp unavailable: requires kernel 3.5+ with CONFIG_SECCOMP and CONFIG_SECCOMP_FILTER compiled <span class="keyword">in</span></div><div class="line">        at org.elasticsearch.bootstrap.SystemCallFilter.linuxImpl(SystemCallFilter.java:350) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.SystemCallFilter.init(SystemCallFilter.java:638) ~[elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.JNANatives.tryInstallSystemCallFilter(JNANatives.java:215) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Natives.tryInstallSystemCallFilter(Natives.java:99) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Bootstrap.initializeNatives(Bootstrap.java:111) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:204) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:360) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:123) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:114) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:67) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:122) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.cli.Command.main(Command.java:88) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:91) [elasticsearch-5.4.0.jar:5.4.0]</div><div class="line">        at org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:84) [elasticsearch-5.4.0.jar:5.4.0]</div></pre></td></tr></table></figure></p>
<p>通过官网论坛了解到，这个并不影响，可以不关心，不开启system call功能即可，当然，我是为了搭建生产环境，我重新选择了CentOS7.3,内核就是3.10+了，启动时也不会再有这个错误提示了。</p>
<p>第三个错误：系统参数配置不满足(<font color="BLUE">max file descriptors，max number of threads，vm.max_map_count</font>)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; max file descriptors [65535] <span class="keyword">for</span> elasticsearch process is too low, increase to at least [65536]</div><div class="line">max number of threads [1024] <span class="keyword">for</span> user [elk] is too low, increase to at least [2048]</div><div class="line">max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</div></pre></td></tr></table></figure></p>
<p>解决办法，修改系统内核参数，<br>1.在/etc/sysctl.conf中增加 vm.max_map_count=655360；<br>2.在/etc/security/limit.conf中修改如下参数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># End of file</span></div><div class="line">root soft nofile 1048576</div><div class="line">root hard nofile 1048576</div><div class="line">* soft nofile 1048576</div><div class="line">* hard nofile 1048576</div></pre></td></tr></table></figure></p>
<p>3.在/etc/security/limit.d/20-nproc.conf中修改* soft nproc 1024为10240，如下所示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">*          soft    nproc     10240</div><div class="line">root       soft    nproc     unlimited</div></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>配置文件修改，config/elasticsearch.yml<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http.port: 9200              <span class="comment">###按需进行修改</span></div><div class="line">network.host: 127.0.0.1      <span class="comment">###绑定指定访问IP,如果只允许内网访问则绑定内网IP</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="Kibana安装过程"><a href="#Kibana安装过程" class="headerlink" title="Kibana安装过程"></a>Kibana安装过程</h5><ul>
<li><p>官网下载安装包(<a href="https://www.elastic.co/downloads/kibana" target="_blank" rel="external">https://www.elastic.co/downloads/kibana</a>)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -L -O https://artifacts.elastic.co/downloads/kibana/kibana-5.4.0-linux-x86_64.tar.gz</div><div class="line">tar zxvf kibana-5.4.0-linux-x86_64.tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>配置config/kibana.yml中elasticsearch.url，elasticsearch.username，elasticsearch.password参数</p>
</li>
<li>运行 bin/kibana &amp;</li>
</ul>
<h5 id="X-Pack安装过程"><a href="#X-Pack安装过程" class="headerlink" title="X-Pack安装过程"></a>X-Pack安装过程</h5><ul>
<li>不需要下载，直接作为插件安装在elasticsearch和kibana中</li>
<li>安装x-pack后登录kibana需要密码，默认密码elastic / changeme<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bin/elasticsearch-plugin install x-pack</div><div class="line">bin/kibana-plugin install x-pack</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="Redis3-2-9安装过程"><a href="#Redis3-2-9安装过程" class="headerlink" title="Redis3.2.9安装过程"></a>Redis3.2.9安装过程</h5><ul>
<li>官网下载最新版本（<a href="https://redis.io/download）" target="_blank" rel="external">https://redis.io/download）</a></li>
<li><p>通过命令下载，解压并编译</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">curl -L -O http://download.redis.io/releases/redis-3.2.9.tar.gz</div><div class="line">tar zxvf redis-3.2.9.tar.gz</div><div class="line"><span class="built_in">cd</span> redis-3.2.9</div><div class="line">make</div><div class="line">... <span class="keyword">then</span> copy binary files with prefix redis- to /usr/<span class="built_in">local</span>/redis/bin</div></pre></td></tr></table></figure>
</li>
<li><p>修改配置参数，如port,bind,logfile,logpath,dumpfilename,requirepass,rename，如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">bind</span> 10.xx.xx.xxx 127.0.0.1          <span class="comment">###仅允许内网和本机访问</span></div><div class="line">protected-mode yes                   <span class="comment">###保护模式开启</span></div><div class="line">port 123456                          <span class="comment">###端口默认为6379，按需修改</span></div><div class="line">daemonize yes                        <span class="comment">###守护模式开启</span></div><div class="line">pidfile /usr/<span class="built_in">local</span>/redis/redis.pid   <span class="comment">###指定pid文件路径和文件名</span></div><div class="line">logfile <span class="string">"/usr/local/redis/redis.log"</span> <span class="comment">###指定日志文件路径和文件名</span></div><div class="line">dbfilename redis.rdb                 <span class="comment">###指定数据文件RDB文件名</span></div><div class="line">dir /usr/<span class="built_in">local</span>/redis/                <span class="comment">###指定数据文件RDB文件的存放路径</span></div><div class="line">requirepass 『YOURPASSWORD』          <span class="comment">###设置访问密码</span></div><div class="line">rename-command CONFIG <span class="string">"OTHERALIAS-0"</span> <span class="comment">###把不安全的命令进行重命名保护</span></div><div class="line">rename-command FLUSHDB <span class="string">"OTHERALIAS-1"</span></div><div class="line">rename-command FLUSHALL <span class="string">"OTHERALIAS-2"</span></div></pre></td></tr></table></figure>
</li>
<li><p>REDIS启动</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/<span class="built_in">local</span>/bin/redis-server /usr/<span class="built_in">local</span>/bin/redis.conf &amp;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="Logstash安装过程"><a href="#Logstash安装过程" class="headerlink" title="Logstash安装过程"></a>Logstash安装过程</h5><ul>
<li><p>官网下载安装包 (<a href="https://www.elastic.co/downloads/logstash" target="_blank" rel="external">https://www.elastic.co/downloads/logstash</a>)</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl -L -O https://artifacts.elastic.co/downloads/logstash/logstash-5.4.0.tar.gz</div><div class="line">tar zxvf logstash-5.4.0.tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>增加indexer配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">input &#123;</div><div class="line">    redis &#123;</div><div class="line">        host =&gt; <span class="string">"127.0.0.1"</span></div><div class="line">        <span class="built_in">type</span> =&gt; <span class="string">"redis-input"</span></div><div class="line">        data_type =&gt; <span class="string">"list"</span></div><div class="line">        key =&gt; <span class="string">"logindexer_list"</span></div><div class="line">        port =&gt; 36469</div><div class="line">        password =&gt; <span class="string">"YOUR REDIS PASSWORD"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="comment"># filter configration here</span></div><div class="line">output &#123;</div><div class="line">    elasticsearch &#123;</div><div class="line">         hosts =&gt; [<span class="string">"127.0.0.1:9200"</span>]</div><div class="line">         user =&gt; elastic</div><div class="line">         password =&gt; xxyyzz...</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="Filebeat安装过程"><a href="#Filebeat安装过程" class="headerlink" title="Filebeat安装过程"></a>Filebeat安装过程</h5><ul>
<li>filebeat安装在各台应用服务器上，收集相关的日志内容输出到redis队列中</li>
<li>官网下载安装(<a href="https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.4.0-linux-x86_64.tar.gz" target="_blank" rel="external">https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.4.0-linux-x86_64.tar.gz</a>)</li>
<li><p>分发到应用服务器上安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar zxvf filebeat-5.4.0-linux-x86_64.tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>复制filebeat.yml为filebeat.lnbapp.yml</p>
</li>
<li><p>配置文件位置和输出到redis相关配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">-input_type: <span class="built_in">log</span></div><div class="line">  <span class="comment">#Paths that should be crawled and fetched. Glob based paths.</span></div><div class="line">  paths:</div><div class="line">    <span class="comment">#- /var/log/*.log</span></div><div class="line">    <span class="comment">#- c:\programdata\elasticsearch\logs\*</span></div><div class="line">    - /appserver/tomcat/logs/catalina.out</div><div class="line">	- /..../.../.../logfile</div><div class="line">	<span class="comment">### 多个路径按模板往下添加即可</span></div><div class="line">    <span class="comment">#------------------- Redis output --------------------------</span></div><div class="line">output.redis:</div><div class="line">  enabled: <span class="literal">true</span></div><div class="line">  hosts: [<span class="string">"10.xx.xx.xx:6379"</span>]</div><div class="line">  key: logindexer_list</div><div class="line">  password: YOUR REDIS PASSWORD</div></pre></td></tr></table></figure>
</li>
<li><p>启动filebeat</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bin/filebeat <span class="_">-e</span> -c filebeat.lnbapp.yml &amp;</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 环境搭建 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[技术大牛说自己的成长经历[转载]]]></title>
      <url>/2017/05/23/share-experience-01/</url>
      <content type="html"><![CDATA[<p>今天”华清远见”公众号发表了一篇文章，总结的内容感觉很有共鸣，因此转载到我的博客中，与博主共勉。</p>
<hr>
<p>做为技术道路上的过来人，我也分享一下我的体会。简单来讲，成为技术大牛虽然有难度，但其实也没那么难。要成为任何一个领域的专家，你需要做的是学会该领域的已有知识，所以你只要学习就行了。真正有难度的事情是创新，是利用已有知识和技能创造出人类还不知道的有价值的东西。（篇幅较长，请耐心看）</p>
<h5 id="纸上得来终觉浅，绝知此事要躬行"><a href="#纸上得来终觉浅，绝知此事要躬行" class="headerlink" title=" 纸上得来终觉浅，绝知此事要躬行 "></a><font color="RED"> 纸上得来终觉浅，绝知此事要躬行 </font></h5><p>我自己总结了一句话：“技能学习这件事，有技巧无捷径”。有技巧是说，并不是说你花了很多时间，技能就一定会提高的，这里面有方法论的区别；无捷径是说，即使知道了技巧，不下功夫也是不行的，正所谓，纸上得来终觉浅，绝知此事要躬行。</p>
<p>拿我自己来举例子。我在上大学之前从来没有接触过PC，甚至都不知道有个人电脑这种东西。操作电脑、编程这件事对我而言完全是零基础，自学成才。由于对计算机有强烈的兴趣，从大一开始，我花了很多时间学习编程（当然也花了很多时间玩电脑游戏），诸如个人电脑操作指南、打字法、Windows用户手册、微机原理、Windows/Unix操作系统、各种C/C++编程书籍（Turbo C、Borland C/C++、Visual C++），我看了一大堆书，也写了一些程序练手。直到大四，我还是觉得很迷茫。一方面感觉自己学了很多东西，另一方面又觉得好像什么都不会。具体点说，如果让我写个编程作业，问题不大；但是如果让我写一个有完整功能的应用程序，干不了。换句话说，我的水平可以应付学校里的作业，但是还没能力做真正的产品开发。</p>
<h5 id="工作时既要用心，还要关注细节"><a href="#工作时既要用心，还要关注细节" class="headerlink" title=" 工作时既要用心，还要关注细节 "></a><font color="RED"> 工作时既要用心，还要关注细节 </font></h5><p>这让我很焦虑，不知道毕业怎么找工作。当时我的想法，是找一家公司实习，工资多少无所谓，一定要能锻炼技术。我选择的公司是一个创业公司（现在不存在了），同学推荐的，领导和技术团队都很牛。我的面试很糟糕，人生的第一场面试，几乎所有问题都搞砸了。领导看在推荐人的面子上把我留下，工作内容是组装电脑和安装各种软件，跟电脑城里卖电脑的差不多。由于在大学里装过无数次电脑，我干的不错。印象最深刻的一次是有一回别人刚攒好的电脑系统（SunOS 4）启动到登录界面时出现花屏，鼠标滑到哪儿花到哪儿。领导让我判断是什么问题（他技术很好，其实在考验我），我说可能是因为显存不够，换一块有两兆显存的显卡试试。换显卡后果然好了。</p>
<p>大约是从那以后，领导开始让我参与软件开发。我写的第一个商业程序是一个应用网关，把一种医疗仪器集成到我们自己开发的医疗信息系统。由于后来需求的不断扩大和我本人的完美主义倾向，这个软件我重写了三遍。最开始很普通的一个模块，最后可以做到可以方便地接入各种新设备（不同厂商、不同种类），也因此变成了核心模块，产生了独特的商业价值。有的项目中公司拿出来单独卖，也专门为它申请了专利保护。</p>
<p>这两件事我学到的是，做任何事情都要用心，要非常关注细节。看起来不起眼的、繁琐的工作做透了会有意想不到的价值。从技术角度，我也学到了很多东西。比如，如何用RS232和设备通信；如何写一个TCP服务器；如何写一个独立的Windows应用程序；如何把一个普通程序做成Windows NT Service；如何写一个跨平台的程序（Windows和Linux都能跑）；如何设计一个框架，能够快速集成多种协议（RS232串口、TCP/IP、有状态协议、无状态协议等）；如何逆向分析各种设备协议（我们是小公司，拿不到医疗设备公司的协议文档）；如何把设备集成框架设计得简单易用，我不在的时候（当时我还没毕业）别人也能快速集成新设备。我觉得任何一个值得做的项目都会学到很多新知识，成为技术专家的关键一点是你要把每一个有价值的知识点研究透，这样多个项目积累下来，你就有了很多很扎实的知识点，这些知识点积累起来，结合书本知识，就能系统化。什么叫研究透？想像一下世界上该领域的顶级专家来跟你交流，你是否能做到他问的任何问题都能对答如流。</p>
<h5 id="做事要知其然，还要知其所以然"><a href="#做事要知其然，还要知其所以然" class="headerlink" title=" 做事要知其然，还要知其所以然 "></a><font color="RED"> 做事要知其然，还要知其所以然 </font></h5><p>已经过了快二十年，我对这个程序的很多技术点还能记住，是因为当时真的下了很多功夫（不然不会重写三遍）。我面过很多人，不太理解的一点是发现有些人对自己做过的东西说不清楚，有的细节甚至才过了几个月就忘了。我面人的基本要求是知其然还要知其所以然，自己做过的东西说不清楚说明不怎么动脑子，知其然不知其所以然说明对技术没有追求，不关心背后的原理。</p>
<p>基本上我写过的所有软件，设计要点我到现在都能记住。要做到这一点，一方面是做任何事情都要下功夫，关注细节；另一方面是要把设计和实现分开，实现可以忘记但是设计不能忘。</p>
<h5 id="学会时常总结和反思，多多动脑子"><a href="#学会时常总结和反思，多多动脑子" class="headerlink" title=" 学会时常总结和反思，多多动脑子 "></a><font color="RED"> 学会时常总结和反思，多多动脑子 </font></h5><p>大家都是普通人，我的记忆力也很一般。参加同学聚会的时候，大家经常回忆往事。我经常发现当年一起做过的事情，别人说的津津有味，我却完全想不起来。设计和实现分离是我刻意训练过的一个技巧，目的之一就是为了长久记忆。设计是有规律和普遍意义的，可以用在以后的工作中，值得花更多的时间去思考和提炼，而花更多的时间恰恰有助于记忆。实现细节太多，记住不容易，很多时候也跟具体的项目有关，对以后的项目不一定有帮助，没必要刻意去记。中学的时候做题，我喜欢总结规律，从一道题中归纳出一类题的解法，找到快速解题的公式。我甚至还要求自己对某些题型要在一定的时间内解出来（我中学的时候总结了一套解题公式，可以快速对付各类题型）–这些都导致我会花很多时间研究解题技巧。而花了这么多时间得出的解题技巧，记不住也难。所以我说，如果做过的东西说不清楚，说明不动脑子，下的功夫不够。</p>
<p>这个网关程序我在兼职状态下做了三年多（从大四到读研），真正的密集开发可能只有不到一年的时间，还不是全职的，后面忙着本科毕设和研究生学业，变成顾问角色，很少去公司。我在那时就已经成为了Windows技术专家。做d2hackmap游戏外挂是在研究生后期，那个时候我的C++、Windows技术水平已经很高了，如果你去看d2hackmap的源代码，可以发现里面用了各种Windows、C/C++、汇编技巧。</p>
<p>在这个网关开发的过程中和研究生期间，我学习了哪些技术？具体来说，有当时所有主要的Windows开发书籍，所有主流的C/C++编程书籍，还有历期Microsoft System Journals（后改名叫MSDN Magzine）上感兴趣的专栏文章，都看了一遍。问题是，同样的我，为什么从大一到大四花了那么多时间学习编程，进展很慢，然而实习了不到一年就有很大进步呢？我觉得有几个原因。一是原来的学习虽然有一个模糊的方向，但是没有明确目标。二是没有特定的工作环境。三是缺乏过来人的指点，不可避免走了弯路。</p>
<h5 id="明确自己的方向，学会自主学习的技巧"><a href="#明确自己的方向，学会自主学习的技巧" class="headerlink" title=" 明确自己的方向，学会自主学习的技巧 "></a><font color="RED"> 明确自己的方向，学会自主学习的技巧 </font></h5><p>有明确的交付目标和时间点，才会有压力，才会针对具体问题去寻找答案，这样就把漫无目的的学习范围大大缩小了。环境也很重要，在家里工作和在公司工作效率差很多，这跟在宿舍自习和在教室自习差很多一样。过来人的指点可以避免走弯路，让你在第一时间做出正确选择，节省大量时间。但是要记住，别人对你没有义务，所以别指望高手会手把手教你。我的学习更多的是观察优秀的人如何做事以及他们对事情的观点。</p>
<p>通过项目学技能的好处是任务很具体目标很清晰，缺点是容易见树木不见森林，知识不系统。通过看书学技能的好处是知识体系比较完整，有全局观，缺点是书本知识比较抽象和枯燥，不容易理解。所以这两者一定要结合起来。</p>
<h5 id="要不停地向他人学习，学习他人的优点"><a href="#要不停地向他人学习，学习他人的优点" class="headerlink" title=" 要不停地向他人学习，学习他人的优点 "></a><font color="RED"> 要不停地向他人学习，学习他人的优点 </font></h5><p>总结起来一句话，技能学习有技巧无捷径。有技巧是说学习技术需要实践和看书相结合，有高手指点就更好，关键是一定要实践，光看书或者做练习题是不行的；无捷径是说一定要自己下苦功夫，不要幻想有高手带你飞。我在上海生活十几年，上海话都听不懂。因为智商不够吗？肯定不是。因为我不知道学习语言的技巧吗？也不是。是因为我没有学习上海话的压力，也缺乏主动性，没有下功夫而已。</p>
<p>就技能学习而言，花同样多的时间，有专业教练手把手教肯定是效果最好的，这也是为什么在任何竞技领域，业余选手肯定干不过职业选手的原因。但是工作中的同事不是你的私人教练，所以工作中的学习要靠自己，要注意观察高手的工作方法、听他们分享的观点，迷茫的时候找他们指点。</p>
<p>整理自知乎：@Sting   <a href="http://dwz.cn/60agzc" target="_blank" rel="external">http://dwz.cn/60agzc</a></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 经验总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[rsync的使用-多服务器文件同步]]></title>
      <url>/2017/05/19/rsync-usage/</url>
      <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><hr>
<blockquote>
<p>产品中有多处上传图片的业务，在最初架构的时候我仅是把静态资源分离开存储了，实际上是通过应用直接写文件到指定目录，由于服务器仅有一台，所以没有问题，通过Nginx自然也就实现了动静资源的分离架构，但是现在增加了几台服务器，因此，不同的用户随机请求到不同的主机上，图片也就保存到各自的服务器上了，通过后台系统就无法集中查看该业务的全部图片，鉴于此，我开始处理这个问题，寻找解决方案。</p>
</blockquote>
<h3 id="方案选择"><a href="#方案选择" class="headerlink" title="方案选择"></a>方案选择</h3><hr>
<blockquote>
<p>1.定时任务+ftp<br>能实现向文件服务器推送图片文件，但是需要全量或推送完一张然后删除掉本地文件，缺点：操作不方便。</p>
<p>2.定时任务+scp<br>同方案1一样，如果多服务器之间配置互信免密码，还算可以，写个shell脚本定时可以完成功能。</p>
<p>3.定时任务+rsync<br>最终我选择的当然是这个方案，rsync的优点是可以增量同步，速度非常快，安全上可以配置只允许内网指定IP同步上传文件，还有个可以配置忽略部分目录同步。</p>
</blockquote>
<a id="more"></a>
<h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><hr>
<blockquote>
<p>1.服务器端负责接收文件端，客户端是负责上传增量的文件<br>2.rsync在centos上是自带的，也就是系统已经帮你安装好了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[tomcat@lnbAppsvr01 rsyncd]$ rsync --version</div><div class="line">rsync  version 3.0.6  protocol version 30</div><div class="line">Copyright (C) 1996-2009 by Andrew Tridgell, Wayne Davison, and others.</div><div class="line">Web site: http://rsync.samba.org/</div><div class="line">...</div></pre></td></tr></table></figure></p>
<p>3.服务端配置：创建三个文件rsyncd.conf，rsyncd.passwd，rsyncd.motd<br><strong>配置文件rsyncd.conf</strong>如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">uid = root                         </div><div class="line">gid = root                                </div><div class="line">use chroot = no                             </div><div class="line"><span class="built_in">read</span> only = no                       </div><div class="line"><span class="comment">#limit access to private LANs</span></div><div class="line">hosts allow=10.xx.20.xxx 10.xx.36.xxx     --内网允许我IP地址，空格分开</div><div class="line">hosts deny=*                                </div><div class="line">max connections = 5                      </div><div class="line">pid file = /etc/rsyncd/rsyncd.pid         --PID文件  </div><div class="line">secrets file = /etc/rsyncd/rsyncd.passwd  --密钥文件 </div><div class="line"><span class="comment">#lock file = /etc/rsyncd/rsync.lock           </span></div><div class="line">motd file = /etc/rsyncd/rsyncd.motd       --欢迎界面文件 </div><div class="line"><span class="comment">#This will give you a separate log file</span></div><div class="line"><span class="built_in">log</span> file = /etc/rsyncd/rsync.log          --日志文件     </div><div class="line"><span class="comment">#This will log every file transferred - up to 85,000+ per user, per sync</span></div><div class="line">transfer logging = yes                    </div><div class="line"><span class="built_in">log</span> format = %t %a %m %f %b</div><div class="line">syslog facility = <span class="built_in">local</span>3</div><div class="line">timeout = 300</div><div class="line"><span class="comment"># MODULE OPTIONS</span></div><div class="line">[imghome]                                  --模块名称</div><div class="line">path = HEADPATH../staticsvr/filesystem     --接收文件的目录                ,调试期间可以改为自己测试的目录</div><div class="line">list=yes                                   </div><div class="line">ignore errors                              </div><div class="line"><span class="comment">#auth users = imgsync                          </span></div><div class="line">comment = IMG Sync home                  </div><div class="line">exclude = mpseo/ contentMgr/               --忽略接收的目录或文件</div></pre></td></tr></table></figure></p>
<p><strong>密码文件rsyncd.passwd</strong>；内容格式简单且为明文方式且不需要为系统内真实存在的用户，如:（用户名:密码）<br><strong>欢迎界面配置文件rsyncd.motd</strong>；随便写，就是客户端通过rsync命令连接上之后显示的欢迎界面，表示客户端成功连接上服务端了</p>
<p>3.客户端配置，我仅创建了一个密码配置文件，内容就是服务端那一个文件</p>
<p>4.启动服务端，可以配置xinted或者独立守护进程方式启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rsync --daemon --config=/etc/rsyncd/rsyncd.conf</div></pre></td></tr></table></figure></p>
<p>5.客户端连接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rsync -avzP --password-file=rsync.password --exclude=mpseo,contentMgr <span class="variable">$LOCAL_PATH</span> <span class="variable">$SYNCUSER</span>@<span class="variable">$SYNCHOST</span>::imghome</div></pre></td></tr></table></figure></p>
</blockquote>
<p>这句命令可以封装成一个shell脚本，便于crontab调用，当然直接在crontab里配置也是可以，个人习惯而，我觉得修改脚本更灵活方便。</p>
<h3 id="后期改进计划"><a href="#后期改进计划" class="headerlink" title="后期改进计划"></a>后期改进计划</h3><hr>
<blockquote>
<p>使用inotify+rsync实时同步方式</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 环境搭建 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Map的内部结构]]></title>
      <url>/2017/05/06/java-map/</url>
      <content type="html"><![CDATA[<h3 id="常用的Map实现类"><a href="#常用的Map实现类" class="headerlink" title="常用的Map实现类"></a>常用的Map实现类</h3><p>常见的Map实现类大概简单地列举几个。</p>
<ul>
<li>java.util.HashMap</li>
<li>java.util.LinkedHashMap</li>
<li>java.util.concurrent.ConcurrentHashMap</li>
<li>java.util.concurrent.ConcurrentSkipListMap</li>
<li>java.util.IdentityHashMap</li>
<li>java.util.TreeMap</li>
<li>java.util.Hashtable</li>
<li>org.springframework.util.ConcurrentReferenceHashMap</li>
<li>org.springframework.core.annotation.AnnotationAttributes extends LinkedHashMap</li>
<li>org.springframework.ui.ModelMap extends LinkedHashMap</li>
<li>com.mysql.jdbc.util.LRUCache extends LinkedHashMap</li>
</ul>
<p><img src="/images/map-structure.jpg" alt=""></p>
<a id="more"></a>
<h3 id="各种Map的数据结构，特点"><a href="#各种Map的数据结构，特点" class="headerlink" title="各种Map的数据结构，特点"></a>各种Map的数据结构，特点</h3><ul>
<li>HashMap基于单向链表数组存储数据，默认容积16，但是在数组上并没有按照数组下标顺序存储，而是按Key的哈希值计算在数组中的位置。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Constructs an empty &lt;tt&gt;HashMap&lt;/tt&gt; with the default initial capacity</div><div class="line"> * (16) and the default load factor (0.75).</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.loadFactor = DEFAULT_LOAD_FACTOR; <span class="comment">// all other fields defaulted</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Associates the specified value with the specified key in this map.</div><div class="line"> * If the map previously contained a mapping for the key, the old</div><div class="line"> * value is replaced.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> key key with which the specified value is to be associated</div><div class="line"> * <span class="doctag">@param</span> value value to be associated with the specified key</div><div class="line"> * <span class="doctag">@return</span> the previous value associated with &lt;tt&gt;key&lt;/tt&gt;, or</div><div class="line"> *         &lt;tt&gt;null&lt;/tt&gt; if there was no mapping for &lt;tt&gt;key&lt;/tt&gt;.</div><div class="line"> *         (A &lt;tt&gt;null&lt;/tt&gt; return can also indicate that the map</div><div class="line"> *         previously associated &lt;tt&gt;null&lt;/tt&gt; with &lt;tt&gt;key&lt;/tt&gt;.)</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> putVal(hash(key), key, value, <span class="keyword">false</span>, <span class="keyword">true</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Computes key.hashCode() and spreads (XORs) higher bits of hash</div><div class="line"> * to lower.  Because the table uses power-of-two masking, sets of</div><div class="line"> * hashes that vary only in bits above the current mask will</div><div class="line"> * always collide. (Among known examples are sets of Float keys</div><div class="line"> * holding consecutive whole numbers in small tables.)  So we</div><div class="line"> * apply a transform that spreads the impact of higher bits</div><div class="line"> * downward. There is a tradeoff between speed, utility, and</div><div class="line"> * quality of bit-spreading. Because many common sets of hashes</div><div class="line"> * are already reasonably distributed (so don't benefit from</div><div class="line"> * spreading), and because we use trees to handle large sets of</div><div class="line"> * collisions in bins, we just XOR some shifted bits in the</div><div class="line"> * cheapest possible way to reduce systematic lossage, as well as</div><div class="line"> * to incorporate impact of the highest bits that would otherwise</div><div class="line"> * never be used in index calculations because of table bounds.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> h;</div><div class="line">    <span class="keyword">return</span> (key == <span class="keyword">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>LinkedHashMap基于双向链表存储数据。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * The head (eldest) of the doubly linked list.</div><div class="line"> */</div><div class="line"><span class="keyword">transient</span> LinkedHashMap.Entry&lt;K,V&gt; head;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * The tail (youngest) of the doubly linked list.</div><div class="line"> */</div><div class="line"><span class="keyword">transient</span> LinkedHashMap.Entry&lt;K,V&gt; tail;</div></pre></td></tr></table></figure>
<ul>
<li>IdentityHashMap并不是常用的类，但也还是说一下，它基于Object数组存储，默认容积32，实例化时容积会在默认容积*2(64)，因为Key进行哈希后指定坐标位置存储，然后紧接着下个下标元素会存储对应的value；扩容算法为乘以2；另一个特点，它key在取哈希的时候是用的Object的原始算法，因此，只要KEY是不同的对象，内存地址不相同就可以存入两个相同内容的KEY,也就是Key可以重复。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Constructs a new, empty identity hash map with a default expected</div><div class="line"> * maximum size (21).</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">IdentityHashMap</span><span class="params">()</span> </span>&#123;</div><div class="line">    init(DEFAULT_CAPACITY);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Initializes object to be an empty map with the specified initial</div><div class="line"> * capacity, which is assumed to be a power of two between</div><div class="line"> * MINIMUM_CAPACITY and MAXIMUM_CAPACITY inclusive.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> initCapacity)</span> </span>&#123;</div><div class="line">    <span class="comment">// assert (initCapacity &amp; -initCapacity) == initCapacity; // power of 2</span></div><div class="line">    <span class="comment">// assert initCapacity &gt;= MINIMUM_CAPACITY;</span></div><div class="line">    <span class="comment">// assert initCapacity &lt;= MAXIMUM_CAPACITY;</span></div><div class="line"></div><div class="line">    table = <span class="keyword">new</span> Object[<span class="number">2</span> * initCapacity];</div><div class="line">&#125;</div><div class="line">    </div><div class="line"><span class="comment">/**</span></div><div class="line"> * Associates the specified value with the specified key in this identity</div><div class="line"> * hash map.  If the map previously contained a mapping for the key, the</div><div class="line"> * old value is replaced.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> key the key with which the specified value is to be associated</div><div class="line"> * <span class="doctag">@param</span> value the value to be associated with the specified key</div><div class="line"> * <span class="doctag">@return</span> the previous value associated with &lt;tt&gt;key&lt;/tt&gt;, or</div><div class="line"> *         &lt;tt&gt;null&lt;/tt&gt; if there was no mapping for &lt;tt&gt;key&lt;/tt&gt;.</div><div class="line"> *         (A &lt;tt&gt;null&lt;/tt&gt; return can also indicate that the map</div><div class="line"> *         previously associated &lt;tt&gt;null&lt;/tt&gt; with &lt;tt&gt;key&lt;/tt&gt;.)</div><div class="line"> * <span class="doctag">@see</span>     Object#equals(Object)</div><div class="line"> * <span class="doctag">@see</span>     #get(Object)</div><div class="line"> * <span class="doctag">@see</span>     #containsKey(Object)</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</div><div class="line">    <span class="keyword">final</span> Object k = maskNull(key);</div><div class="line"></div><div class="line">    retryAfterResize: <span class="keyword">for</span> (;;) &#123;</div><div class="line">        <span class="keyword">final</span> Object[] tab = table;</div><div class="line">        <span class="keyword">final</span> <span class="keyword">int</span> len = tab.length;</div><div class="line">        <span class="keyword">int</span> i = hash(k, len);</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (Object item; (item = tab[i]) != <span class="keyword">null</span>;</div><div class="line">             i = nextKeyIndex(i, len)) &#123;</div><div class="line">            <span class="keyword">if</span> (item == k) &#123;</div><div class="line">                <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</div><div class="line">                    V oldValue = (V) tab[i + <span class="number">1</span>];</div><div class="line">                tab[i + <span class="number">1</span>] = value;</div><div class="line">                <span class="keyword">return</span> oldValue;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">final</span> <span class="keyword">int</span> s = size + <span class="number">1</span>;</div><div class="line">        <span class="comment">// Use optimized form of 3 * s.</span></div><div class="line">        <span class="comment">// Next capacity is len, 2 * current capacity.</span></div><div class="line">        <span class="keyword">if</span> (s + (s &lt;&lt; <span class="number">1</span>) &gt; len &amp;&amp; resize(len))</div><div class="line">            <span class="keyword">continue</span> retryAfterResize;</div><div class="line"></div><div class="line">        modCount++;</div><div class="line">        tab[i] = k;</div><div class="line">        tab[i + <span class="number">1</span>] = value;</div><div class="line">        size = s;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Returns index for Object x.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object x, <span class="keyword">int</span> length)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> h = System.identityHashCode(x);</div><div class="line">    <span class="comment">// Multiply by -127, and left-shift to use least bit as part of hash</span></div><div class="line">    <span class="keyword">return</span> ((h &lt;&lt; <span class="number">1</span>) - (h &lt;&lt; <span class="number">8</span>)) &amp; (length - <span class="number">1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>TreeMap基于红黑二叉树结构。左孩子节点存放比根节点小的，右孩子节点存放比根节点大的数据，因此，数据存储是有顺序的; 非线程安全，因此，若要在多线程同时处理时需要在外部做好同步操作处理。</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Associates the specified value with the specified key in this map.</div><div class="line"> * If the map previously contained a mapping for the key, the old</div><div class="line"> * value is replaced.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> key key with which the specified value is to be associated</div><div class="line"> * <span class="doctag">@param</span> value value to be associated with the specified key</div><div class="line"> *</div><div class="line"> * <span class="doctag">@return</span> the previous value associated with &#123;<span class="doctag">@code</span> key&#125;, or</div><div class="line"> *         &#123;<span class="doctag">@code</span> null&#125; if there was no mapping for &#123;<span class="doctag">@code</span> key&#125;.</div><div class="line"> *         (A &#123;<span class="doctag">@code</span> null&#125; return can also indicate that the map</div><div class="line"> *         previously associated &#123;<span class="doctag">@code</span> null&#125; with &#123;<span class="doctag">@code</span> key&#125;.)</div><div class="line"> * <span class="doctag">@throws</span> ClassCastException if the specified key cannot be compared</div><div class="line"> *         with the keys currently in the map</div><div class="line"> * <span class="doctag">@throws</span> NullPointerException if the specified key is null</div><div class="line"> *         and this map uses natural ordering, or its comparator</div><div class="line"> *         does not permit null keys</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</div><div class="line">    Entry&lt;K,V&gt; t = root;</div><div class="line">    <span class="keyword">if</span> (t == <span class="keyword">null</span>) &#123;</div><div class="line">        compare(key, key); <span class="comment">// type (and possibly null) check</span></div><div class="line"></div><div class="line">        root = <span class="keyword">new</span> Entry&lt;&gt;(key, value, <span class="keyword">null</span>);</div><div class="line">        size = <span class="number">1</span>;</div><div class="line">        modCount++;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> cmp;</div><div class="line">    Entry&lt;K,V&gt; parent;</div><div class="line">    <span class="comment">// split comparator and comparable paths</span></div><div class="line">    Comparator&lt;? <span class="keyword">super</span> K&gt; cpr = comparator;</div><div class="line">    <span class="keyword">if</span> (cpr != <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">do</span> &#123;</div><div class="line">            parent = t;</div><div class="line">            cmp = cpr.compare(key, t.key);</div><div class="line">            <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>)</div><div class="line">                t = t.left;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (cmp &gt; <span class="number">0</span>)</div><div class="line">                t = t.right;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                <span class="keyword">return</span> t.setValue(value);</div><div class="line">        &#125; <span class="keyword">while</span> (t != <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">if</span> (key == <span class="keyword">null</span>)</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();</div><div class="line">        <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</div><div class="line">            Comparable&lt;? <span class="keyword">super</span> K&gt; k = (Comparable&lt;? <span class="keyword">super</span> K&gt;) key;</div><div class="line">        <span class="keyword">do</span> &#123;</div><div class="line">            parent = t;</div><div class="line">            cmp = k.compareTo(t.key);</div><div class="line">            <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>)</div><div class="line">                t = t.left;</div><div class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (cmp &gt; <span class="number">0</span>)</div><div class="line">                t = t.right;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                <span class="keyword">return</span> t.setValue(value);</div><div class="line">        &#125; <span class="keyword">while</span> (t != <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">    Entry&lt;K,V&gt; e = <span class="keyword">new</span> Entry&lt;&gt;(key, value, parent);</div><div class="line">    <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>)</div><div class="line">        parent.left = e;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        parent.right = e;</div><div class="line">    fixAfterInsertion(e);</div><div class="line">    size++;</div><div class="line">    modCount++;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>*</p>
<h3 id="有趣的设计"><a href="#有趣的设计" class="headerlink" title="有趣的设计"></a>有趣的设计</h3><ul>
<li>接口中又定义了接口， Map.Entry定义了所有数据节点的结构和方法。</li>
</ul>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>由于是尝试分析，非常地浅显，欢迎各路大神对文中错误提出指正，对不足之处不吝赐教。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[LinkedList和ArrayList的比较]]></title>
      <url>/2017/05/03/java-linked-array-diff/</url>
      <content type="html"><![CDATA[<p>说明：本文所参照的源码是jdk1.8</p>
<h5 id="继承关系"><a href="#继承关系" class="headerlink" title="继承关系"></a>继承关系</h5><p><img src="/images/hierarchy-linkedlist-arraylist.png" alt=""></p>
<h5 id="List接口提供的方法-28个"><a href="#List接口提供的方法-28个" class="headerlink" title="List接口提供的方法(28个)"></a>List接口提供的方法(28个)</h5><p><img src="/images/methods-in-list.png" alt=""></p>
<a id="more"></a>
<h5 id="相同点"><a href="#相同点" class="headerlink" title="相同点"></a>相同点</h5><hr>
<ul>
<li>都可被克隆和序列化，且都实现了List接口中定义的方法</li>
<li>实现了相同的hashcode算法</li>
<li>实现了相同的toString方法</li>
</ul>
<h5 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h5><hr>
<ul>
<li>数据结构不同</li>
</ul>
<blockquote>
<p>ArrayList是数组数据结构<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">     * The array buffer into which the elements of the ArrayList are stored.</div><div class="line">     * The capacity of the ArrayList is the length of this array buffer. Any</div><div class="line">     * empty ArrayList with elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA</div><div class="line">     * will be expanded to DEFAULT_CAPACITY when the first element is added.</div><div class="line">     */</div><div class="line">    <span class="keyword">transient</span> Object[] elementData; <span class="comment">// non-private to simplify nested class access</span></div></pre></td></tr></table></figure></p>
<p>LinkedList是链表结构<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">E</span>&gt; </span>&#123;</div><div class="line">    E item;</div><div class="line">    Node&lt;E&gt; next;</div><div class="line">    Node&lt;E&gt; prev;</div><div class="line"></div><div class="line">    Node(Node&lt;E&gt; prev, E element, Node&lt;E&gt; next) &#123;</div><div class="line">        <span class="keyword">this</span>.item = element;</div><div class="line">        <span class="keyword">this</span>.next = next;</div><div class="line">        <span class="keyword">this</span>.prev = prev;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>数据初始内存大小和插入性能不同</li>
</ul>
<blockquote>
<p>ArrayList内部数组扩展大小的算法（当前元素数组长度+它的二分之一，如，当前为30，扩展一次则变为45=30+30/2）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Increases the capacity to ensure that it can hold at least the</div><div class="line"> * number of elements specified by the minimum capacity argument.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> minCapacity the desired minimum capacity</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</div><div class="line">    <span class="comment">// overflow-conscious code</span></div><div class="line">    <span class="keyword">int</span> oldCapacity = elementData.length;</div><div class="line">    <span class="keyword">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</div><div class="line">        newCapacity = minCapacity;</div><div class="line">    <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)</div><div class="line">        newCapacity = hugeCapacity(minCapacity);</div><div class="line">    <span class="comment">// minCapacity is usually close to size, so this is a win:</span></div><div class="line">    elementData = Arrays.copyOf(elementData, newCapacity);</div><div class="line">&#125;</div><div class="line">&gt;</div></pre></td></tr></table></figure></p>
<p>ArrayList初始创建时大小也为0（但可以通过构造方法指定大小），但是当往ArrayList中任意添加元素它的大小则会改变，当元素个数小于10则为10，当元素个数大于10，则按照扩展算法进行扩展；<br>LinkedList初始创建大小为0，因为数据结构是链表所以没有指定大小的构造函数。<br><strong>因此</strong>，插入数据从性能上讲，LinkedList比ArrayList好，因为，LinkedList添加元素只要改变链表的前，后节点关系即可，而ArrayList要先检查数组大小处理扩展逻辑和拷贝数据到新的数组。</p>
</blockquote>
<ul>
<li>访问元素的性能对比</li>
</ul>
<blockquote>
<p>ArrayList通过数组下标访问，速度很快；LinkedList则有可能需要遍历整个链表一半的元素才能找到想要的元素<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Returns the (non-null) Node at the specified element index.</div><div class="line"> */</div><div class="line"><span class="function">Node&lt;E&gt; <span class="title">node</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</div><div class="line">    <span class="comment">// assert isElementIndex(index);</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> (index &lt; (size &gt;&gt; <span class="number">1</span>)) &#123;</div><div class="line">        Node&lt;E&gt; x = first;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index; i++)</div><div class="line">            x = x.next;</div><div class="line">        <span class="keyword">return</span> x;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        Node&lt;E&gt; x = last;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = size - <span class="number">1</span>; i &gt; index; i--)</div><div class="line">            x = x.prev;</div><div class="line">        <span class="keyword">return</span> x;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
</blockquote>
<ul>
<li>LinkedList可实现队列</li>
</ul>
<blockquote>
<p>LinkedList实现了Deque接口，提供诸如push,pop,offer等方法，因此，它能很好地实现队列操作；而ArrayList并没有提供这些方法，由于它的数据结构决定了它也不适合作队列。</p>
</blockquote>
<h5 id="引申分析Vector"><a href="#引申分析Vector" class="headerlink" title="引申分析Vector"></a>引申分析Vector</h5><ul>
<li><p>Vector从实现结构上跟ArrayList是一样的，区别在于Vector是线程安全的，ArrayList则不是。</p>
</li>
<li><p>Vector可以获取容积大小，而ArrayList获取不了</p>
</li>
</ul>
<h5 id="引申分析Set"><a href="#引申分析Set" class="headerlink" title="引申分析Set"></a>引申分析Set</h5><ul>
<li>HashSet为数据结构为HashMap,因此，数据元素不会重复，也没有顺序</li>
<li>LinkedHashSet的数据结构则为LinkedHashMap, 因此，数据元素依然不会重复，但双向链表就可以实现有序了</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[StringBuffer和StringBuilder比较]]></title>
      <url>/2017/05/02/java-buffer-build-diff/</url>
      <content type="html"><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;这个问题其实是很多面试官喜欢问的问题，大多数童鞋都知道它们的主要区别是StringBuffer是线程安全的，StringBuilder非线程安全，因为如此，StringBuilder性能略比StringBuffer好。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;我主要从它俩的源码出发来分析它们的区别。</p>
<h5 id="相同点"><a href="#相同点" class="headerlink" title="相同点"></a>相同点</h5><blockquote>
<p>1.它俩都继承自抽象类AbstractStringBulder，实现了Appendable, CharSequece,Serializable接口，而且都是final类型，跟String类一样不能再有子类扩展了<br>2.它们的内部数据结构都是字符数组：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * The value is used for character storage.</div><div class="line"> */</div><div class="line"><span class="keyword">char</span>[] value;</div></pre></td></tr></table></figure></p>
<p>3.它们默认的创建时的长度为16个字符<br>4.append/delete/insert/replace方法的核心操作都是通过System.arraycopy实现<br>5.它们都提供四个构造函数<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBxxx</span><span class="params">()</span></span>;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBxxx</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBxxx</span><span class="params">(String str)</span></span>;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">StringBxxx</span><span class="params">(CharSequece seq)</span></span>;</div></pre></td></tr></table></figure></p>
<p>6.每当append方法执行前，都会判断数组大小是否足够，如果不够则扩展其长度，算法为 <strong>当前容量长度*2+2</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">    * This method has the same contract as ensureCapacity, but is</div><div class="line">    * never synchronized.</div><div class="line">    */</div><div class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureCapacityInternal</span><span class="params">(<span class="keyword">int</span> minimumCapacity)</span> </span>&#123;</div><div class="line">       <span class="comment">// overflow-conscious code</span></div><div class="line">       <span class="keyword">if</span> (minimumCapacity - value.length &gt; <span class="number">0</span>)</div><div class="line">           expandCapacity(minimumCapacity);</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="comment">/**</span></div><div class="line">    * This implements the expansion semantics of ensureCapacity with no</div><div class="line">    * size check or synchronization.</div><div class="line">    */</div><div class="line">   <span class="function"><span class="keyword">void</span> <span class="title">expandCapacity</span><span class="params">(<span class="keyword">int</span> minimumCapacity)</span> </span>&#123;</div><div class="line">       <span class="keyword">int</span> newCapacity = value.length * <span class="number">2</span> + <span class="number">2</span>;</div><div class="line">       <span class="keyword">if</span> (newCapacity - minimumCapacity &lt; <span class="number">0</span>)</div><div class="line">           newCapacity = minimumCapacity;</div><div class="line">       <span class="keyword">if</span> (newCapacity &lt; <span class="number">0</span>) &#123;</div><div class="line">           <span class="keyword">if</span> (minimumCapacity &lt; <span class="number">0</span>) <span class="comment">// overflow</span></div><div class="line">               <span class="keyword">throw</span> <span class="keyword">new</span> OutOfMemoryError();</div><div class="line">           newCapacity = Integer.MAX_VALUE;</div><div class="line">       &#125;</div><div class="line">       value = Arrays.copyOf(value, newCapacity);</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
</blockquote>
<h5 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h5><blockquote>
<p>1.StringBuffer中方法都是synchronized的，保证线程安全<br>2.StringBuffer多一个toStringCache对象，当StringBuffer有toString方法执行时，就会缓存在这里，当内部数据发生变化就会清除缓存内容<br>3.StringBuilder从JDK1.5才开始有，而StringBuffer从JDK1.0就开始有了</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[服务器监控工具-netdata-搭建]]></title>
      <url>/2017/04/27/netdata/</url>
      <content type="html"><![CDATA[<h3 id="netdata简介"><a href="#netdata简介" class="headerlink" title="netdata简介"></a>netdata简介</h3><p>&nbsp;&nbsp;&nbsp;&nbsp;这是个开源项目，项目介绍WIKI：<a href="https://github.com/firehol/netdata/wiki" target="_blank" rel="external">https://github.com/firehol/netdata/wiki</a><br>&nbsp;&nbsp;&nbsp;&nbsp;我已经使用这套监控系统一段时间了，感觉很不错，监控指标丰富，界面美观，能监控集群下的所有节点服务器，它是个什么东东呢？</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;”netdata is a scalable, distributed, real-time, performance and health monitoring solution for Linux, FreeBSD and MacOS. It is open-source too.”</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;netdata是一个可扩展的，分布式的，实时的，为Linux, FreeBSD和MacOS性能及健康状态监控的解决方案，当然它也是开源的。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;它可以监控服务器的健康运行参数及状态，包括CPU,内存，网络，磁盘等常用的监控指标，以及自己配置扩展监控项，如，redis, tomcat, mysql, nginx, elasticsearch等，是不是已经觉得很不错了？那接下来我说说我是怎么安装的，怎么配置的吧。</p>
<h3 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h3><ul>
<li><p>下载</p>
<blockquote>
<p>由于开源项目，直接克隆一套源代码到YOUR_SERVER/path/to/</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/firehol/netdata.git</div></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>安装</p>
<blockquote>
<p>1.安装编译所需要的包</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install zlib-devel libuuid-devel libmnl-devel gcc make git autoconf autogen automake pkgconfig</div></pre></td></tr></table></figure>
<p>2.运行自带的安装启动脚本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./netdata-installer.sh</div></pre></td></tr></table></figure>
<p>完事你会看到如下提示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">It will be installed at these locations:</div><div class="line">  - the daemon     at /usr/sbin/netdata</div><div class="line">  - config files   in /etc/netdata</div><div class="line">  - web files      in /usr/share/netdata</div><div class="line">  - plugins        in /usr/libexec/netdata</div><div class="line">  - cache files    in /var/cache/netdata</div><div class="line">  - db files       in /var/lib/netdata</div><div class="line">  - log files      in /var/log/netdata</div><div class="line">  - pid file       at /var/run/netdata.pid</div><div class="line">  - logrotate file at /etc/logrotate.d/netdata</div><div class="line"> This installer allows you to change the installation path.</div><div class="line"> Press Control-C and run the same command with --help for help.</div><div class="line"> Press ENTER to build and install netdata to your system &gt;</div></pre></td></tr></table></figure>
<p>这些是告诉你，所涉及的文件都安装在哪个目录下，到时配置或修改的时候直接去这些地方找就好了，当然自己也可以仔细看看这些配置文件，了解各个参数的含义。<br>那么这个时候其实就可以通过提示的URL <a href="http://this.machine.ip:19999/" target="_blank" rel="external">http://this.machine.ip:19999/</a> 开始监控当前服务器了, 没错，正如访问地址，默认WEB使用的端口为19999.<br>看看netdata监控界面长啥样儿吧~</p>
<a id="more"></a>
<p><img src="/images/netdata-monitor.png" alt=""></p>
<p>3.修改默认端口和限制仅内网访问<br>为了安全，特别是在生产服务器上，尽量修改掉默认端口，而且我也不想把我的所有服务器的公网IP都公开暴露，所以我会找一个跳板机来监控它们，而且我还限制了netdata的数据只有通过跳板机提供的接口能才访问监控WEB页面，保护集群服务器各个节点，具体修改其实很简单，修改配置文件即可，/etc/netdata/netdata.conf。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[web]</div><div class="line">        <span class="comment"># web files owner = netdata</span></div><div class="line">        <span class="comment"># web files group = netdata</span></div><div class="line">        <span class="comment"># listen backlog = 100</span></div><div class="line">        <span class="comment"># default port = 19999</span></div><div class="line">        <span class="comment"># bind to = *</span></div><div class="line">        <span class="comment"># mode = multi-threaded</span></div><div class="line">        <span class="comment"># disconnect idle clients after seconds = 60</span></div><div class="line">        <span class="comment"># respect do not track policy = no</span></div><div class="line">        <span class="comment"># x-frame-options response header = </span></div><div class="line">        <span class="comment"># enable gzip compression = yes</span></div><div class="line">        <span class="comment"># gzip compression strategy = default</span></div><div class="line">        <span class="comment"># gzip compression level = 3</span></div><div class="line">        default port = 123232</div><div class="line">        <span class="built_in">bind</span> to = 10.xx.yy.zz:123232</div></pre></td></tr></table></figure>
<p>可以看到最后两项是我自己修改的内容，内网的IP，通过ifconfig可以方便地看到，eth0 对应的inet addr就是。<br>修改好了，需要重启一下netdata服务，方法有几种，安装成功注册到service的，可以通过service netdata restart来重启，也可以直接killall netdata, 然后 netdata启动。</p>
<p><strong>这四个步骤重复在所有的服务器上搞一遍，那么基本安装配置就好了，接下来配置Nginx</strong></p>
</blockquote>
</li>
<li><p>访问接口配置</p>
<blockquote>
<p>我使用nginx来配置对外提供的监控访问接口，我选择一台测试服务器，安全要求较低的服务器作为了跳板监控机。Nginx安装此处不细说，介绍一下我配置的内容：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  www.jinsk.vip;</div><div class="line"></div><div class="line">    location /m/1/ &#123;</div><div class="line">        proxy_pass http://10.xx.yy.z1:port/;</div><div class="line">        proxy_set_header        Host <span class="variable">$host</span>;</div><div class="line">        proxy_set_header        X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">        proxy_set_header        X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location /m/2/ &#123;</div><div class="line">        proxy_pass http://10.xx.yy.z2:port/;</div><div class="line">        proxy_set_header        Host <span class="variable">$host</span>;</div><div class="line">        proxy_set_header        X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">        proxy_set_header        X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location /m/3/ &#123;</div><div class="line">        proxy_pass http://10.xx.yy.z3:port/;</div><div class="line">        proxy_set_header        Host <span class="variable">$host</span>;</div><div class="line">        proxy_set_header        X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">        proxy_set_header        X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location /m/4/ &#123;</div><div class="line">        proxy_pass http://10.xx.yy.z4:port/;</div><div class="line">        proxy_set_header        Host <span class="variable">$host</span>;</div><div class="line">        proxy_set_header        X-Real-IP <span class="variable">$remote_addr</span>;</div><div class="line">        proxy_set_header        X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</div><div class="line">    &#125;</div><div class="line">    ....</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>基本监控功能模块安装和配置就已经好了，就可以让开发运维的小伙伴们定期的去遛一遍服务器，当然netdata身也是带有提醒功能的，只要你开启着监控页面，就会在设定的预警参数触发和恢复时在浏览器右上角提醒您。</p>
</li>
</ul>
<h3 id="配置redis监控"><a href="#配置redis监控" class="headerlink" title="配置redis监控"></a>配置redis监控</h3><p>按照官方提供的方法，分为Python版和shell版，官方推荐使用python版，所以我按照python版本的方法进行配置的。</p>
<ul>
<li>1.启用redis监控功能，默认是没有启用的<blockquote>
<p>修改/etc/netdata/python.d.conf配置文件中的redis启动项，即去掉注释 #redis: yes<br>redis: yes</p>
</blockquote>
</li>
<li>2.配置redis的地址，端口，用户名，密码<blockquote>
<p>修改/etc/netdata/python.d/redis.conf配置文件<br>支持socket, ipv4, ipv6方式,参考已有配置格式进个添加修改即可，先定义个标签，如”basedata_ipv4:”,然后包含四个参数可配置，name,host,port,pass，name就是在监控面板中看到的名称，便于区分多个redis节点，host,port,pass一看就明白分别对应的是什么了，不多说了。</p>
</blockquote>
</li>
</ul>
<h3 id="配置mysql监控"><a href="#配置mysql监控" class="headerlink" title="配置mysql监控"></a>配置mysql监控</h3><p>有了上面的redis插件配置方法，配置mysql就是依葫芦画瓢了，先去掉#mysql:yes的注释，然后配置mysql.conf中的连接参数。</p>
<h3 id="配置tomcat监控"><a href="#配置tomcat监控" class="headerlink" title="配置tomcat监控"></a>配置tomcat监控</h3><p>目前我是还没有配置，因为，我生产应用的tomcat改造过，并且移除了status模块，所以暂时还没有配置集中监控功能。</p>
<h3 id="配置nginx监控"><a href="#配置nginx监控" class="headerlink" title="配置nginx监控"></a>配置nginx监控</h3><p>目前我也还没有配置，网上资料挺多的，安装相应模块，并配置相应的参数即可应用了。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul>
<li>优点<blockquote>
<p>1.极大的方便了监控服务器的操作，可以让团队的小伙伴们一起来做这事，而且还可以在家里做，随时随地做，再也不需要指定小伙伴登录CRT去逐个服务器检查了。<br>2.由于本身提供的监控指标够多，也有相对较合理的预警值提醒，因此，只要打开着监控页面，看到有报警去对应处理就可以了，提高了工作效率。</p>
</blockquote>
</li>
<li>建议<blockquote>
<p>1.配置需要仔细小心，当时绑定内网IP的时候，我就不小心小手一抖把bind to 写成了 bing to, 因此而测试了好久没找到原因，一度还怀疑netdata功能有问题，于是乎，我还去github提了<a href="https://github.com/firehol/netdata/issues/2067" target="_blank" rel="external">issue</a>。<br>2.观察日志，有没有出现异常。<br>3.去github上搜索解决方案，你遇到的问题别人早就遇到过了，而且已经解决了。</p>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 环境搭建 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的博客小窝上线了]]></title>
      <url>/2017/04/21/first/</url>
      <content type="html"><![CDATA[<h3 id="本窝目的"><a href="#本窝目的" class="headerlink" title="本窝目的"></a>本窝目的</h3><p>作为一名程序猿，应该要有自己的小窝来总结、积累、沉淀自己的东西，充实自己，因此，趁在农忙过后的这段时间搭好环境，转移曾经的笔记到这个小窝来。<br>随便回顾一下本博所搭建运用的技术，因此也是我需要学习的新知识，如：markdown语法， hexo框架，github管理及git工具。</p>
<h3 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h3><ul>
<li>Github<blockquote>
<p><a href="https://github.com/" target="_blank" rel="external">注册帐号</a><br>创建项目</p>
</blockquote>
</li>
<li>本地搭建hexo环境<blockquote>
<p>安装Node.js<br>安装hexo<br>创建博客项目<br>配置github帐号<br>安装插件<br><a href="https://hexo.io/themes/" target="_blank" rel="external">选择主题</a><br>下载并配置主题（本人选择了<a href="https://github.com/ppoffice/hexo-theme-icarus" target="_blank" rel="external">icarus</a>）</p>
</blockquote>
</li>
<li>安装Markdown环境<blockquote>
<p>安装SublimeText3<br>安装Markdown插件</p>
</blockquote>
</li>
</ul>
<h3 id="问题总结"><a href="#问题总结" class="headerlink" title="问题总结"></a>问题总结</h3><h6 id="上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。"><a href="#上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。" class="headerlink" title="上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。"></a>上面各个步骤在网上都有很多资料，对照着配置都不会有什么问题，但我简单把我遇到的问题并且在网上并没有找到太多资料的步骤描述一下，方便遇到和我一样问题的朋友可以借鉴。</h6><a id="more"></a>
<ul>
<li><p>主题汉化</p>
<blockquote>
<p>1.下载就略过了，git clone 对应的主题到本地themes目录下<br>2.我一开始还对主题的各个页面进行了汉化修改，但实际上并不需要，只要把主配置文件_config.yml中语言项配置为zh-CN即可，即(language: zh-CN)</p>
</blockquote>
</li>
<li><p>自定义域名配置</p>
<blockquote>
<p>如果你也和我一样，专门申请了一个专用的域名，那么会在github中配置costom domain,但是每次重新发布之后，又需要重新设置<br><strong>解决办法</strong>：在项目source目录中创建CNAME文件，在里面写上自己的域名即可，再重新发即不需要重新设置了</p>
</blockquote>
</li>
<li><p>评论支持功能配置</p>
<blockquote>
<p>1.社会化评论系统选择，我首先参考了网上很多朋友使用的友言，我开始配置了，发现发布github上之后，提交评论时提示参数不正确，无法提交评论内容，于是，转而尝试多说，但是遗憾多说将在6.1日关停评论服务，所以，后来我选择了”<a href="http://changyan.kuaizhan.com/" target="_blank" rel="external">搜狐畅言</a>“<br>2.对于畅言来说，配置还是挺简单的，注册好帐号就能找到appid和conf两个东西，配置上就OK了<br>3.配置主题中_config.yml-&gt;comment: changyan: 两项，并不需要网上所说修改artcle.ejs了，因为，新版的主题直接在最下边处理好了,在index.ejs中针对支持的评论系统做好了处理</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;%- partial(&apos;comment/index&apos;) %&gt;</div></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>分类和标签通过菜单进入无内容显示</p>
<blockquote>
<p><strong>解决办法</strong>：把主题下面边的categories里的index.md复制到项目的source里categories目录里的index.md进行替换，其实也就是参考主题里的写法就好了；标签的也一样。</p>
</blockquote>
</li>
</ul>
<h3 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h3><p>希望大家多多指教，多多交流，左边二维码是我的微信，欢迎加我好友进行交流，相互学习。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 环境搭建 </tag>
            
            <tag> 随笔日志 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
